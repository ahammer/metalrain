[workspace]
members = [
    "crates/metaball_renderer",
    # New core/game crates
    "crates/game_core",
    "crates/game",
    # Centralized event & input reduction crate (Event/Input Reduction Subsprint)
    "crates/event_core",
    # Physics crate (Sprint 2)
    "crates/game_physics",
    # Rendering crate (Sprint 3)
    "crates/game_rendering",
    # Widget renderer (Sprint 4)
    "crates/widget_renderer",
    # Centralized assets crate
    "crates/game_assets",
    # Background renderer crate (Sprint: Background Renderer)
    "crates/background_renderer",
    # Demos
    "demos/metaballs_test",
    "demos/compositor_test",
    "demos/architecture_test",
    # Physics playground demo (Sprint 2)
    "demos/physics_playground",
    # Unified launcher for demos
    "demos/demo_launcher",
    # Focused input integration + diagnostics demo
    "demos/input_demo",
    # New standardized assets demonstration demo
    "demos/asset_test",
]
exclude = [
    "external/bevy"
]
resolver = "2"

[workspace.features]
# Process raw assets at build/load time (future pipeline placeholder). Currently a no-op toggle.
processed_assets = []
# Embed assets directly into the binary / wasm (wired through game_assets crate).
embedded_assets = ["game_assets/embedded_assets"]

# Centralized dependency versions (Sprint 1 workspace-level dependencies)
[workspace.dependencies]
# NOTE: Removed the `file_watcher` feature from Bevy for WASM compatibility.
# The Bevy `file_watcher` feature triggers a compile_error! on wasm32 targets.
# If native hot-reload is desired, we can re-introduce it behind an optional
# workspace feature (e.g. `native_dev`) that is only used on desktop builds.
bevy = { version = "0.16.1", features = ["bevy_winit", "bevy_sprite", "bevy_ui", "bevy_text", "webgpu"] }
serde = { version = "1.0", features = ["derive"] }
# Added parallel feature to match demo usage and ensure future multi-threaded physics.
bevy_rapier2d = { version = "0.30", features = ["simd-stable", "parallel"] }

[workspace.package]
edition = "2021"


