[package]
name = "ball_matcher"
version = "0.1.0"
edition = "2021"
authors = ["Adam <you@example.com>"]
license = "GPL-3.0-or-later"
default-run = "ball_matcher"

[dependencies]
# Bevy without WebGL: explicitly enumerate features (omit `webgl2` to avoid enabling wgpu/webgl)
# Feature set retains core 2D / UI / asset / audio (optional) capabilities; adjust if you need fewer.
bevy = { version = "0.16", default-features = false, features = [
    "animation",
    "bevy_asset",
    "bevy_audio",
    "bevy_core_pipeline",
    "bevy_log",
    "bevy_gizmos",
    "bevy_pbr",
    "bevy_render",
    "bevy_scene",
    "bevy_sprite",
    "bevy_text",
    "bevy_ui",
    "bevy_winit",
    "default_font",
    "hdr",
    "ktx2",
    "multi_threaded",
    "png",
    "smaa_luts",
    "tonemapping_luts",
    "vorbis",
    "x11",
    # deliberately NO "webgl2"
] } # WebGPU-only policy: `webgl2` removed
rand = "0.8"
serde = { version = "1.0", features = ["derive"] }
ron = "0.8"
bevy_rapier2d = { version = "0.31", features = ["simd-stable", "debug-render-2d"] }
bytemuck = { version = "1.15", features = ["derive"] }
half = "2"
smallvec = "1.13"
toml = "0.8"
serde_json = "1.0"
image = { version = "0.25", default-features = false, features = ["png"] }
anyhow = "1.0"
clap = { version = "4", features = ["derive"] }
ab_glyph = "0.2"
ttf-parser = "0.20"
wgpu = { version = "24", default-features = true, features = ["webgpu"] }


[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
js-sys = "0.3"
web-sys = { version = "0.3", features = ["Window","Navigator","Document"] }
console_error_panic_hook = "0.1"
getrandom = { version = "0.3", features = ["wasm_js"] }
uuid = { version = "1", features = ["js"] }

# Native: explicitly ensure modern backends (Vulkan/Metal/DX12) are enabled; avoid GL/WebGL.
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# Rely on Bevy's internal wgpu (Vulkan / Metal / DX12 backends enforced at runtime in `main.rs`).

[dev-dependencies]
tempfile = "3"

[profile.dev]
opt-level = 1

[profile.release]
codegen-units = 1
lto = "thin"
strip = true
opt-level = "z"

[features]
default = ["debug"]
# Enable with: cargo run --features debug
debug = []
# Metaballs optimization feature flags
metaballs_early_exit = []
metaballs_outline_exit = []
metaballs_metadata_v2 = []
## Level loading modes
# Embed level layout/widgets RON into the binary (also auto-active on wasm32 target via cfg checks in code)
embedded_levels = []
# Enable disk mode live reload (currently stub warning if not implemented). Ignored when embedded_levels active.
live_levels = []
