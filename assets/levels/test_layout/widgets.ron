// Widgets definition (unified) v1
// Goal: clear semantic naming instead of ambiguous "spawns".
// One list of heterogeneous widgets; each entry has a `type` discriminant.
// Supported initial types: "SpawnPoint", "Attractor" (future: "Repulsor", "Teleporter", etc.).
// Fields kept minimal; we only commit to what we intend to support short-term.
//
// Schema sketch:
// (
//   version: 1,
//   widgets: [
//     ( type:"SpawnPoint", id:0, pos:(x:..,y:..), spawn:( interval: f32, batch: u32, area_radius: f32,
//          ball_radius:(min: f32, max: f32), speed:(min:f32,max:f32) ) ),
//     ( type:"Attractor", id:100, pos:(x:..,y:..), strength: f32, radius: f32, falloff:"InverseLinear", enabled:true ),
//   ],
// )
// NOTE: We preserve existing enum strings (Attract/Repulse, InverseLinear, etc.) if we map directly into current config later.
(
    version: 1,
    widgets: [
        (
            type: "SpawnPoint",
            id: 0,
            pos: ( x: -400.0, y: -200.0 ),
            spawn: Some((
                interval: 0.60,
                batch: 4,
                area_radius: 80.0,
                ball_radius: ( min: 6.0, max: 14.0 ),
                speed: ( min: 40.0, max: 200.0 ),
            )),
        ),
        (
            type: "Attractor",
            id: 100,
            pos: ( x: 0.0, y: 0.0 ),
            strength: Some(600.0),
            radius: Some(0.0),            // 0 => infinite
            falloff: Some("InverseLinear"),
            enabled: Some(true),
        ),
    ],
)
